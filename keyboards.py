# =============================================
# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
# =============================================
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from messages import (
    BUTTON_BACK, BUTTON_SHOW_ALL, BUTTON_WITH_RESPONSES,
    BUTTON_SORT_NEW, BUTTON_SORT_OLD, BUTTON_PAGE_INFO, BUTTON_NEXT
)
from database import has_questions_with_responses, has_reviews_with_responses

# =============================================
# –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
# =============================================
def get_main_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –±–æ—Ç–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.
    Returns:
        InlineKeyboardMarkup: –û–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úçÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data="leave_review"),
            InlineKeyboardButton(text="‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="ask_question")
        ],
        [
            InlineKeyboardButton(text="üìã –ú–æ–∏ –æ—Ç–∑—ã–≤—ã –∏ –≤–æ–ø—Ä–æ—Å—ã", callback_data="my_reviews")
        ]
    ])
    return keyboard

# =============================================
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ—Ü–µ–Ω–∫–∞–º–∏
# =============================================
def get_star_rating_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ—Ü–µ–Ω–∫–∞–º–∏ –≤ –≤–∏–¥–µ –∑–≤–µ–∑–¥ –æ—Ç 1 –¥–æ 5.
    Returns:
        InlineKeyboardMarkup: –û–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∑–≤–µ–∑–¥
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚≠ê", callback_data="rating_1")],
        [InlineKeyboardButton(text="‚≠ê‚≠ê", callback_data="rating_2")],
        [InlineKeyboardButton(text="‚≠ê‚≠ê‚≠ê", callback_data="rating_3")],
        [InlineKeyboardButton(text="‚≠ê‚≠ê‚≠ê‚≠ê", callback_data="rating_4")],
        [InlineKeyboardButton(text="‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê", callback_data="rating_5")],
        [InlineKeyboardButton(text=BUTTON_BACK, callback_data="back_to_main")]
    ])
    return keyboard

# =============================================
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ–ø—Ü–∏—è–º–∏ –¥–ª—è –æ—Ç–∑—ã–≤–∞
# =============================================
def get_review_options_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–ø—Ü–∏—è–º–∏ –¥–ª—è –æ—Ç–∑—ã–≤–∞.
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ–ø—Ü–∏–π
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="back_to_main")],
        [InlineKeyboardButton(text="üìù –û—Ü–µ–Ω–∏—Ç—å –±–µ–∑ –æ—Ç–∑—ã–≤–∞", callback_data="skip_review_text")]
    ])
    return keyboard

# =============================================
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∏—Å—Ç–æ—Ä–∏–∏
# =============================================
def get_history_type_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∏—Å—Ç–æ—Ä–∏–∏ (–æ—Ç–∑—ã–≤—ã –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã).
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üìù –ú–æ–∏ –æ—Ç–∑—ã–≤—ã", callback_data="history_reviews"),
            InlineKeyboardButton(text="‚ùì –ú–æ–∏ –≤–æ–ø—Ä–æ—Å—ã", callback_data="history_questions")
        ],
        [InlineKeyboardButton(text=BUTTON_BACK, callback_data="back_to_main")]
    ])
    return keyboard

# =============================================
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–∞
# =============================================
async def get_filter_type_keyboard(history_type: str, user_id: int) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–∞ (–≤—Å–µ –∏–ª–∏ —Ç–æ–ª—å–∫–æ —Å –æ—Ç–≤–µ—Ç–∞–º–∏).
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É "–¢–æ–ª—å–∫–æ —Å –æ—Ç–≤–µ—Ç–∞–º–∏" —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –æ—Ç–∑—ã–≤—ã/–≤–æ–ø—Ä–æ—Å—ã —Å –æ—Ç–≤–µ—Ç–∞–º–∏.
    
    Args:
        history_type (str): –¢–∏–ø –∏—Å—Ç–æ—Ä–∏–∏ ('reviews' –∏–ª–∏ 'questions')
        user_id (int): ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    keyboard = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ"
    keyboard.append([InlineKeyboardButton(text=BUTTON_SHOW_ALL, callback_data=f"filter_all_{history_type}")])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Ç–∑—ã–≤–æ–≤/–≤–æ–ø—Ä–æ—Å–æ–≤ —Å –æ—Ç–≤–µ—Ç–∞–º–∏
    has_responses = False
    if history_type == "reviews":
        has_responses = await has_reviews_with_responses(user_id)
    else:  # questions
        has_responses = await has_questions_with_responses(user_id)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–¢–æ–ª—å–∫–æ —Å –æ—Ç–≤–µ—Ç–∞–º–∏" —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –æ—Ç–∑—ã–≤—ã/–≤–æ–ø—Ä–æ—Å—ã —Å –æ—Ç–≤–µ—Ç–∞–º–∏
    if has_responses:
        keyboard.append([InlineKeyboardButton(text=BUTTON_WITH_RESPONSES, callback_data=f"filter_responses_{history_type}")])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
    keyboard.append([InlineKeyboardButton(text=BUTTON_BACK, callback_data="back_to_history")])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# =============================================
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
# =============================================
def get_sort_type_keyboard(history_type: str, filter_type: str) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.
    
    Args:
        history_type (str): –¢–∏–ø –∏—Å—Ç–æ—Ä–∏–∏ ('reviews' –∏–ª–∏ 'questions')
        filter_type (str): –¢–∏–ø —Ñ–∏–ª—å—Ç—Ä–∞ ('all' –∏–ª–∏ 'responses')
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=BUTTON_SORT_NEW, callback_data=f"sort_new_{history_type}_{filter_type}")],
        [InlineKeyboardButton(text=BUTTON_SORT_OLD, callback_data=f"sort_old_{history_type}_{filter_type}")],
        [InlineKeyboardButton(text=BUTTON_BACK, callback_data=f"back_to_filter_{history_type}")]
    ])
    return keyboard

# =============================================
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
# =============================================
def get_pagination_keyboard(page_number: int, total_pages: int, history_type: str, filter_type: str, sort_type: str) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º.
    
    Args:
        page_number (int): –ù–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        total_pages (int): –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
        history_type (str): –¢–∏–ø –∏—Å—Ç–æ—Ä–∏–∏ ('reviews' –∏–ª–∏ 'questions')
        filter_type (str): –¢–∏–ø —Ñ–∏–ª—å—Ç—Ä–∞ ('all' –∏–ª–∏ 'responses')
        sort_type (str): –¢–∏–ø —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ ('new' –∏–ª–∏ 'old')
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    """
    keyboard = []
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_buttons = []
    if page_number > 1:
        nav_buttons.append(InlineKeyboardButton(
            text=BUTTON_BACK,
            callback_data=f"page_{page_number-1}_{history_type}_{filter_type}_{sort_type}"
        ))
    if page_number < total_pages:
        nav_buttons.append(InlineKeyboardButton(
            text=BUTTON_NEXT,
            callback_data=f"page_{page_number+1}_{history_type}_{filter_type}_{sort_type}"
        ))
    
    if nav_buttons:
        keyboard.append(nav_buttons)
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    keyboard.append([InlineKeyboardButton(
        text=BUTTON_PAGE_INFO.format(page_number=page_number, total_pages=total_pages),
        callback_data="noop"
    )])
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
    keyboard.append([InlineKeyboardButton(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Ñ–∏–ª—å—Ç—Ä–∞–º",
        callback_data=f"back_to_filter_{history_type}"
    )])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# =============================================
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
# =============================================
def get_back_keyboard(callback_data: str = "back_to_main") -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥".
    
    Args:
        callback_data (str): –î–∞–Ω–Ω—ã–µ –¥–ª—è callback-–∑–∞–ø—Ä–æ—Å–∞
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=BUTTON_BACK, callback_data=callback_data)]
    ]) 